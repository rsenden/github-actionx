on:
  push:
      
permissions:
  contents: write
  pull-requests: write
      
name: Publish release
jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Check-out source code
        uses: actions/checkout@v2
        
      - name: Set git author for auto-commits
        run: |
          git config user.name github-actions
          git config user.email github-actions@fortify.com
        
      - name: Update action version references to match branch
        id: perform_update
        run: |
          ./update-action-refs.sh "${GITHUB_REF#refs/heads/}"
          git add . && git commit -m "chore: Update action references" && git push || \
            echo "performed_update=false" >> "$GITHUB_OUTPUT"
      
      - name: Generate and process release PR
        # I'd expect the step above to retrigger the workflow, but apparently it doesn't,
        # hence the commented out check for performed_update status for now.
        if: github.ref == 'refs/heads/main' # && steps.perform_update.outputs.performed_update == 'false'
        id: release_please
        uses: google-github-actions/release-please-action@v3
        with:
          release-type: simple
          package-name: ${{ github.event.repository.name }}
          
      - name: Publish v{major}.{minor} tag
        if: steps.release_please.outputs.release_created
        uses: richardsimko/update-tag@v1
        with:
          tag_name: v${{steps.release_please.outputs.major}}.${{steps.release_please.outputs.minor}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          
      - name: Publish v{major} tag
        if: steps.release_please.outputs.release_created
        uses: richardsimko/update-tag@v1
        with:
          tag_name: v${{steps.release_please.outputs.major}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          
      - name: Update release PR
        if: steps.release_please.outputs.pr
        shell: bash
        run: |
          prBranch=${{ fromJSON(steps.release_please.outputs.pr).headBranchName }}
          git fetch origin "${prBranch}"
          git checkout "${prBranch}"
          version=v$(cat version.txt)
          ./update-action-refs.sh "${version}"
          git add . && git commit -m "chore: Update action references" && git push || echo "No update needed"
          